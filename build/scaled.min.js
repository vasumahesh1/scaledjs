function diamondStep(a,b,c,d){var e=Math.floor(d/2),f=Math.floor(e/2);Commons.Log("HalfBoxSize",e,"diamond-square"),Commons.Log("QuarterBoxSize",f,"diamond-square"),Commons.Log("Getting Avreage of",["["+(b-e)+"],["+(c-e)+"]","["+(b-e)+"],["+(c+e)+"]","["+(b+e)+"],["+(c-e)+"]","["+(b+e)+"],["+(c+e)+"]"],"diamond-square"),a[b][c]=Commons.GetAverage([a[b-e][c-e],a[b-e][c+e],a[b+e][c-e],a[b+e][c+e]]),Commons.Log("Value of Center ["+b+"]["+c+"]",a[b][c],"diamond-square"),e>=2&&(diamondStep(a,b-f,c-f,e),diamondStep(a,b+f,c-f,e),diamondStep(a,b-f,c+f,e),diamondStep(a,b+f,c+f,e))}function squareStep(a,b,c,d){var e=Math.floor(d/2),f=Math.floor(e/2);Commons.Log("HalfBoxSize",e,"diamond-square"),Commons.Log("QuarterBoxSize",f,"diamond-square"),Commons.Log("Getting Avreage of",["["+(b-e)+"],["+(c-e)+"]","["+b+"],["+c+"]","["+(b-e)+"],["+(c+e)+"]","["+(b-d)+"],["+c+"]"],"diamond-square"),a[b-e][c]=Commons.GetAverage([Commons.TryGetArrayValue(a,b-e,c-e),Commons.TryGetArrayValue(a,b,c),Commons.TryGetArrayValue(a,b-e,c+e),Commons.TryGetArrayValue(a,b-d,c)]),Commons.Log("Value of ["+(b-e)+"]["+c+"]",a[b-e][c],"diamond-square"),Commons.Log("Getting Avreage of",["["+(b+e)+"],["+(c-e)+"]","["+b+"],["+c+"]","["+(b+e)+"],["+(c+e)+"]","["+(b+d)+"],["+c+"]"],"diamond-square"),a[b+e][c]=Commons.GetAverage([Commons.TryGetArrayValue(a,b+e,c-e),Commons.TryGetArrayValue(a,b,c),Commons.TryGetArrayValue(a,b+e,c+e),Commons.TryGetArrayValue(a,b+d,c)]),Commons.Log("Value of ["+(b+e)+"]["+c+"]",a[b+e][c]),Commons.Log("Getting Avreage of",["["+(b-e)+"],["+(c-e)+"]","["+b+"],["+c+"]","["+(b+e)+"],["+(c-e)+"]","["+b+"],["+(c-d)+"]"],"diamond-square"),a[b][c-e]=Commons.GetAverage([Commons.TryGetArrayValue(a,b-e,c-e),Commons.TryGetArrayValue(a,b,c),Commons.TryGetArrayValue(a,b+e,c-e),Commons.TryGetArrayValue(a,b,c-d)]),Commons.Log("Value of ["+b+"]["+(c-e)+"]",a[b][c-e],"diamond-square"),Commons.Log("Getting Avreage of",["["+(b-e)+"],["+(c+e)+"]","["+b+"],["+c+"]","["+(b+e)+"],["+(c+e)+"]","["+b+"],["+(c+d)+"]"],"diamond-square"),a[b][c+e]=Commons.GetAverage([Commons.TryGetArrayValue(a,b-e,c+e),Commons.TryGetArrayValue(a,b,c),Commons.TryGetArrayValue(a,b+e,c+e),Commons.TryGetArrayValue(a,b,c+d)]),Commons.Log("Value of ["+b+"]["+(c+e)+"]",a[b][c+e],"diamond-square"),e>=2&&(squareStep(a,b-f,c-f,e),squareStep(a,b+f,c-f,e),squareStep(a,b-f,c+f,e),squareStep(a,b+f,c+f,e))}function GenerateRow(a){var b="<div class='row'>";for(var c in a)b+=GenerateCell(a[c]);return b+="</div>"}function GenerateCell(a){var b="";return b+="<div class='cell'>",b+=a,b+="</div>"}var Commons={debug:!1,allowedLogs:["all"]},PLUS_MINUS_BAR=4;Commons.ConsoleLog=function(a,b){this.debug===!0},Commons.Log=function(a,b,c){this.debug!==!0||-1==this.allowedLogs.indexOf(c)&&"all"!=this.allowedLogs[0]||this.ConsoleLog(a,b)},Commons.Warn=function(a){this.debug===!0},Commons.RoundNumber=function(a){return Math.round(a)},Commons.Randomize=function(a,b){return Math.floor(Math.random()*(b-a+1)+a)},Commons.RandomizeInArray=function(a){var b=0,c=a.length-1,d=this.Randomize(b,c);return a[d]},Commons.RandomizeWithException=function(a,b,c){var d=-1;do d=this.Randomize(a,b);while(-1!=c.indexOf(d));return d},Commons.RandomizePlusMinus=function(a,b){{var c=this.Randomize(1,10);this.Randomize(a,b)}return PLUS_MINUS_BAR>=c?-1*c:c},Commons.GetAverage=function(a){this.Log("Array Came",a);var b=0,c=0;for(var d in a)-1!=a[d]&&(b+=a[d],c++);var e=b/c;return this.Log("Avg",e),e},Commons.TryGetArrayValue=function(a,b,c){return b in a&&c in a[b]?a[b][c]:-1};var ScaledMap=function(){this.terrains=[],this.mapValues=[],this.rowSize=33,this.columnSize=33,this.mapInitValue=-1,this.hasDefaultTerrain=!1,this.startTerrainKeys=["","","",""],this.startTerrainValues=[],this.GetDefaultTerrain=function(){for(var a in this.terrains)if(this.terrains[a].terrainDefault===!0)return this.terrains[a]},this.GetMainTerrains=function(){var a=[];for(var b in this.terrains)"terrain"==this.terrains[b].terrainType&&a.push(this.terrains[b]);return a},this.GetTerrainByKey=function(a){for(var b in this.terrains)if(this.terrains[b].terrainKey==a)return this.terrains[b]}};ScaledMap.prototype.SetDimensions=function(a,b){this.rowSize=a,this.columnSize=b},ScaledMap.prototype.AddTerrain=function(a){var b=new ScaledTerrain;"zLevel"in a?b.CreateTerrain(a.label,a.key,a.max,a.min,a.zLevel):b.CreateTerrain(a.label,a.key,a.max,a.min,0),"type"in a&&b.SetType(a.type),"default"in a&&this.hasDefaultTerrain===!1&&(this.hasDefaultTerrain=!0,b.SetDefault()),Commons.Log("Adding Terrain",b),this.terrains.push(b)},ScaledMap.prototype.AddStartingCondition=function(a){var b=this.GetTerrainByKey(a.layerKey);b.terrainStartCount=a.minCount,b.terrainStartPercent=a.optionalPercent},ScaledMap.prototype.Init=function(){for(this.hasDefaultTerrain===!1&&terrains[0].SetDefault(),i=0;i<this.rowSize;i++){var a=[];for(j=0;j<this.columnSize;j++)a.push(this.mapInitValue);this.mapValues.push(a)}var b=[],c=0,d=this.GetMainTerrains();Commons.Log("Regular Terrains",d);for(var e in d)if(d[e].terrainStartCount>0){var f={};f.terrainKey=d[e].terrainKey,f.count=d[e].terrainStartCount,f.nextPercent=d[e].terrainStartPercent,c+=d[e].terrainStartCount,b.push(f)}b.sort(function(a,b){return b.count-a.count});var g=4,h=[];if(4>=c){g=4-c;for(var k in b)for(j=0;j<b[k].count;j++){var l=Commons.RandomizeWithException(0,3,h);h.push(l),this.startTerrainKeys[l]=b[k].terrainKey}}if(0!==g){var m=0,n=[],o=[];for(var p in d){var q={};d[p].terrainStartPercent>0?(m+=d[p].terrainStartPercent,q.terrainKey=d[p].terrainKey,q.cumulativePercent=m,n.push(q)):(q.terrainKey=d[p].terrainKey,o.push(q))}if(m>100);else for(i=0;i<g;i++){var r=Commons.RandomizeWithException(0,3,h);h.push(r);var s=Commons.Randomize(0,100),t=null,u=!1;for(var v in n)if(s<=n[v].cumulativePercent){u=!0,t=n[v].terrainKey;break}u===!1&&(t=Commons.RandomizeInArray(o).terrainKey),this.startTerrainKeys[r]=t}}Commons.Log("Start Terrain Keys",this.startTerrainKeys);for(var w in this.startTerrainKeys){var x=this.GetTerrainByKey(this.startTerrainKeys[w]);this.startTerrainValues.push(x.GetRandomTerrainValue())}Commons.Log("Start Terrain Values",this.startTerrainValues),this.mapValues[0][0]=this.startTerrainValues[0],this.mapValues[0][this.columnSize-1]=this.startTerrainValues[1],this.mapValues[this.rowSize-1][0]=this.startTerrainValues[2],this.mapValues[this.rowSize-1][this.columnSize-1]=this.startTerrainValues[3]},ScaledMap.prototype.GenerateMapValues=function(){Commons.Warn("Map Init Starting"),this.Init(),Commons.Warn("Diamond Square Algorithm Starting"),this.mapValues=diamondSquare(this.mapValues,this.rowSize-1)};var diamondSquare=function(a,b){return Commons.Warn("Diamond Step Starting"),diamondStep(a,b/2,b/2,b),Commons.Warn("Square Step Starting"),squareStep(a,b/2,b/2,b),a},ScaledTerrain=function(){this.terrainUpperValue=-1,this.terrainLowerValue=-1,this.terrainLabel=-1,this.terrainKey=-1,this.terrainZLevel=-1,this.terrainType="terrain",this.terrainDefault=!1,this.terrainStartCount=0,this.terrainStartPercent=0};ScaledTerrain.prototype.CreateTerrain=function(a,b,c,d,e){this.terrainUpperValue=c,this.terrainLowerValue=d,this.terrainKey=b,this.terrainLabel=a,this.terrainZLevel=e},ScaledTerrain.prototype.SetStartingCondition=function(a,b){this.terrainStartPercent=b,this.terrainStartCount=a},ScaledTerrain.prototype.SetDefault=function(){this.terrainDefault=!0},ScaledTerrain.prototype.SetType=function(a){this.terrainType=a},ScaledTerrain.prototype.GetRandomTerrainValue=function(){return Commons.Randomize(this.terrainLowerValue,this.terrainUpperValue)};var ScaledGen=function(a){a&&("debug"in a&&a.debug===!0&&(Commons.debug=!0),"logs"in a&&(Commons.allowedLogs=a.logs)),this.mainMap=new ScaledMap};ScaledGen.prototype.SetMapSize=function(a,b){this.mainMap.rowSize=a,this.mainMap.columnSize=b},ScaledGen.prototype.AddTerrain=function(a){this.mainMap.AddTerrain(a)},ScaledGen.prototype.AddStartingCondition=function(a){this.mainMap.AddStartingCondition(a)},ScaledGen.prototype.GenerateMap=function(){this.mainMap.GenerateMapValues()},ScaledGen.prototype.RenderMapValues=function(a){var b=document.getElementById(a),c=this.mainMap.mapValues,d="";for(var e in c)d+=GenerateRow(c[e]);b.innerHTML=d};